version: 2.1
orbs:
    sonarcloud: sonarsource/sonarcloud@2.0.0

commands:
    node-install:
        description: "Install Node.js dependencies"
        steps:
            - run:
                  name: Install dependencies
                  command: npm ci

    node-linter:
        description: "Run ESLint with HTML output"
        steps:
            - run:
                  name: Run linter
                  command: |
                      mkdir -p ./lint
                      npm run lint -- --format html --output-file ./lint/index.html
            - store_artifacts:
                  path: ./lint

    node-test:
        description: "Run Mocha test suite with reports"
        steps:
            - run:
                  name: Run unit tests
                  command: |
                      mkdir -p ./coverage
                      npm run test -- --reporter mocha-multi-reporters --reporter-options configFile=./test/reporter-config.json
                  environment:
                      MOCHAWESOME_REPORTFILENAME: index.html
                      MOCHAWESOME_REPORTDIR: ./coverage/unit-test
            - store_test_results:
                  path: ./coverage
            - store_artifacts:
                  path: ./coverage

    node-coverage:
        description: "Generate NYC coverage report"
        steps:
            - run:
                  name: Generate coverage report
                  command: npm run report
            - store_artifacts:
                  path: ./coverage

    npm-deploy:
        description: "Publish package to NPM with beta tag detection"
        steps:
            - run:
                  name: Authenticate with NPM
                  command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
            - run:
                  name: Set package version from tag
                  command: npm version $CIRCLE_TAG --allow-same-version --no-git-tag-version
            - run:
                  name: Publish to NPM
                  command: |
                      if echo "$CIRCLE_TAG" | grep -iq "beta"; then
                          echo "Beta version detected in tag: $CIRCLE_TAG"
                          echo "Publishing with --tag beta"
                          npm publish --access public --tag beta
                      else
                          echo "Stable version detected in tag: $CIRCLE_TAG"
                          echo "Publishing to latest"
                          npm publish --access public
                      fi

jobs:
    install:
        docker:
            - image: cimg/node:22.19.0
        steps:
            - checkout:
                  method: full
            - node-install
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - ./*

    lint:
        docker:
            - image: cimg/node:22.19.0
        steps:
            - attach_workspace:
                  at: ~/project
            - node-linter

    test:
        docker:
            - image: cimg/node:22.19.0
        steps:
            - attach_workspace:
                  at: ~/project
            - node-test
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - ./*

    coverage:
        docker:
            - image: cimg/node:22.19.0
        steps:
            - attach_workspace:
                  at: ~/project
            - node-coverage
            - sonarcloud/scan

    install-test-deploy:
        docker:
            - image: cimg/node:22.19.0
        steps:
            - checkout:
                  method: full
            - node-install
            - node-test
            - node-coverage
            - npm-deploy

workflows:
    version: 2

    install-test-workflow:
        jobs:
            - install
            - lint:
                  requires:
                      - install
            - test:
                  requires:
                      - install
            - coverage:
                  context:
                      - sonarcloud
                  requires:
                      - test

    install-deploy-workflow:
        jobs:
            - install-test-deploy:
                  filters:
                      tags:
                          only: /.*/
                      branches:
                          ignore: /.*/
